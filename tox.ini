[tox]
envlist = {py27,py33,py34,py35,py36,py37}, docs, flake
skip_missing_interpreters=True

[base]
deps = -r{toxinidir}/requirements.txt

[testenv:py{27,33,34,35,36,37}]
sitepackages = False
recreate = True
basepython =
    py27: python2.7
    py33: python3.3
    py34: python3.4
    py35: python3.5
    py36: python3.6
    py37: python3.7
deps =
	py27: pycrypto>=2.6.1
	py33: pycrypto>=2.6.1
	py36: ruamel.yaml>=0.14.12
	py37: ruamel.yaml>=0.14.12
	coverage>=4.4
    {[base]deps}
commands = $PYTHON -m coverage run -p --source=piaplib,piaplib/book,piaplib/pku,piaplib/lint,piaplib/keyring -m unittest tests.test_basic tests.test_html tests.test_salt tests.test_strings tests.test_utils tests.test_lint tests.test_book tests.test_rand tests.test_config tests.test_usage tests.test_pocket || $PYTHON -m unittest tests.test_basic tests.test_html tests.test_salt tests.test_strings tests.test_utils tests.test_lint tests.test_book tests.test_rand tests.test_config tests.test_usage tests.test_pocket
	coverage combine 2>/dev/null || true
	coverage report --include=piaplib* 2>/dev/null || true
	codecov 2>/dev/null || true

[testenv:flake]
basepython =
    flake: python3
deps =
	flake: flake8>=2.5.4
	pyflakes>=1.1.0
	pep8>=1.7.0
	coverage>=4.4
    {[base]deps}
commands = flake8 --ignore=W191,W391 --max-line-length=100 --count

[coverage:run]
parallel = True

[coverage:report]
include = piaplib*
# Regexes for lines to exclude from consideration
exclude_lines =
    # Have to re-enable the standard pragma
    pragma: no cover

    except Exception
    # Don't complain if tests don't hit defensive assertion code:
    raise AssertionError
    raise NotImplementedError
    raise ImportError
    raise PiAPError

    # Don't complain if non-runnable code isn't run:
	if __name__ in u'__main__':

ignore_errors = True

